{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VALUEMEDIA ADMIN\\\\Desktop\\\\hair\\\\dashboard\\\\src\\\\components\\\\products\\\\EditproductMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Toast from \"./../LoadingError/Toast\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProduct, updateProduct } from \"./../../Redux/Actions/ProductActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../../Redux/Constants/ProductConstants\";\nimport { toast } from \"react-toastify\";\nimport Message from \"../LoadingError/Error\";\nimport Loading from \"../LoadingError/Loading\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToastObjects = {\n  pauseOnFocusLoss: false,\n  draggable: false,\n  pauseOnHover: false,\n  autoClose: 2000\n};\n\nconst EditProductMain = props => {\n  _s();\n\n  const {\n    productId\n  } = props;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [color, setColor] = useState([]);\n  const dispatch = useDispatch();\n  const productEdit = useSelector(state => state.productEdit);\n  const {\n    loading,\n    error,\n    product\n  } = productEdit;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      toast.success(\"Product Updated\", ToastObjects);\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(editProduct(productId));\n      } else {\n        setName(product.name);\n        setDescription(product.description);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n        setPrice(product.price);\n        setColor(product.color);\n      }\n    }\n  }, [product, dispatch, productId, successUpdate]);\n\n  const submitHandler = e => {\n    console.log(color);\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      description,\n      image,\n      countInStock,\n      color\n    }));\n  };\n\n  useEffect(() => {\n    if (color.length === 0) {\n      return;\n    }\n\n    console.log('running');\n  }, [color]);\n  const options = [{\n    label: \"Red\",\n    value: \"red\"\n  }, {\n    label: \"Blue\",\n    value: \"blue\"\n  }, {\n    label: \"Green\",\n    value: \"green\"\n  }, {\n    label: \"Yellow\",\n    value: \"yellow\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-main\",\n      style: {\n        maxWidth: \"1200px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/products\",\n            className: \"btn btn-danger text-white\",\n            children: \"Go to products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"content-title\",\n            children: \"Update Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Publish now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-8 col-lg-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card mb-4 shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"alert-danger\",\n                  children: errorUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"alert-danger\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"product_title\",\n                      className: \"form-label\",\n                      children: \"Product title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Type here\",\n                      className: \"form-control\",\n                      id: \"product_title\",\n                      required: true,\n                      value: name,\n                      onChange: e => setName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"product_price\",\n                      className: \"form-label\",\n                      children: \"Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Type here\",\n                      className: \"form-control\",\n                      id: \"product_price\",\n                      required: true,\n                      value: price,\n                      onChange: e => setPrice(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"product_color\",\n                      className: \"form-label\",\n                      children: \"Color\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      closeMenuOnSelect: false,\n                      options: options,\n                      isMulti: true,\n                      onChange: e => setColor(e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"product_price\",\n                      className: \"form-label\",\n                      children: \"Count In Stock\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Type here\",\n                      className: \"form-control\",\n                      id: \"product_price\",\n                      required: true,\n                      value: countInStock,\n                      onChange: e => setCountInStock(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      placeholder: \"Type here\",\n                      className: \"form-control\",\n                      rows: \"7\",\n                      required: true,\n                      value: description,\n                      onChange: e => setDescription(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Images\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-control\",\n                      type: \"text\",\n                      value: image,\n                      required: true,\n                      onChange: e => setImage(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditProductMain, \"Hs2qYiCTR+vsRQ8ZWJGgEyGZEjo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProductMain;\nexport default EditProductMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductMain\");","map":{"version":3,"sources":["C:/Users/VALUEMEDIA ADMIN/Desktop/hair/dashboard/src/components/products/EditproductMain.js"],"names":["React","useState","useEffect","Toast","Link","useDispatch","useSelector","editProduct","updateProduct","PRODUCT_UPDATE_RESET","toast","Message","Loading","Select","ToastObjects","pauseOnFocusLoss","draggable","pauseOnHover","autoClose","EditProductMain","props","productId","name","setName","price","setPrice","image","setImage","countInStock","setCountInStock","description","setDescription","color","setColor","dispatch","productEdit","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","submitHandler","e","console","log","preventDefault","length","options","label","value","maxWidth","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,WADF,EAEEC,aAFF,QAGO,sCAHP;AAIA,SAASC,oBAAT,QAAqC,wCAArC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,KADC;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AAGA,QAAMiC,QAAQ,GAAG7B,WAAW,EAA5B;AAEA,QAAM8B,WAAW,GAAG7B,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BJ,WAApC;AAEA,QAAMK,aAAa,GAAGlC,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACI,aAAlB,CAAjC;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJH,IAAAA,KAAK,EAAEI,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,aAJJ;AAMAtC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0C,aAAJ,EAAmB;AACjBV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEpC;AAAR,OAAD,CAAR;AACAC,MAAAA,KAAK,CAACiC,OAAN,CAAc,iBAAd,EAAiC7B,YAAjC;AACD,KAHD,MAGO;AACL,UAAI,CAACyB,OAAO,CAACjB,IAAT,IAAiBiB,OAAO,CAACO,GAAR,KAAgBzB,SAArC,EAAgD;AAC9Ca,QAAAA,QAAQ,CAAC3B,WAAW,CAACc,SAAD,CAAZ,CAAR;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACgB,OAAO,CAACjB,IAAT,CAAP;AACAS,QAAAA,cAAc,CAACQ,OAAO,CAACT,WAAT,CAAd;AACAD,QAAAA,eAAe,CAACU,OAAO,CAACX,YAAT,CAAf;AACAD,QAAAA,QAAQ,CAACY,OAAO,CAACb,KAAT,CAAR;AACAD,QAAAA,QAAQ,CAACc,OAAO,CAACf,KAAT,CAAR;AACAS,QAAAA,QAAQ,CAACM,OAAO,CAACP,KAAT,CAAR;AAED;AACF;AACF,GAjBQ,EAiBN,CAACO,OAAD,EAAUL,QAAV,EAAoBb,SAApB,EAA+BuB,aAA/B,CAjBM,CAAT;;AAmBA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACAgB,IAAAA,CAAC,CAACG,cAAF;AACAjB,IAAAA,QAAQ,CACN1B,aAAa,CAAC;AACZsC,MAAAA,GAAG,EAAEzB,SADO;AAEZC,MAAAA,IAFY;AAGZE,MAAAA,KAHY;AAIZM,MAAAA,WAJY;AAKZJ,MAAAA,KALY;AAMZE,MAAAA,YANY;AAOZI,MAAAA;AAPY,KAAD,CADP,CAAR;AAWD,GAdD;;AAgBA9B,EAAAA,SAAS,CAAC,MAAK;AAEjB,QAAI8B,KAAK,CAACoB,MAAN,KAAiB,CAArB,EAAuB;AACrB;AACD;;AAAAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACE,GALQ,EAKN,CAAClB,KAAD,CALM,CAAT;AAMA,QAAMqB,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAJc,CAAhB;AAOA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAzC;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAET,aAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAqB,YAAA,SAAS,EAAC,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,2BACGL,WAAW,iBACV,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,cAAjB;AAAA,4BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAIGD,aAAa,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,wBAJpB,EAKGJ,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,wBADM,GAEJC,KAAK,gBACP,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAC,cAAjB;AAAA,4BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,wBADO,gBAGP;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAO,sBAAA,OAAO,EAAC,eAAf;AAA+B,sBAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,WAAW,EAAC,WAFd;AAGE,sBAAA,SAAS,EAAC,cAHZ;AAIE,sBAAA,EAAE,EAAC,eAJL;AAKE,sBAAA,QAAQ,MALV;AAME,sBAAA,KAAK,EAAEhB,IANT;AAOE,sBAAA,QAAQ,EAAG0B,CAAD,IAAOzB,OAAO,CAACyB,CAAC,CAACS,MAAF,CAASF,KAAV;AAP1B;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAeE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAO,sBAAA,OAAO,EAAC,eAAf;AAA+B,sBAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,WAAW,EAAC,WAFd;AAGE,sBAAA,SAAS,EAAC,cAHZ;AAIE,sBAAA,EAAE,EAAC,eAJL;AAKE,sBAAA,QAAQ,MALV;AAME,sBAAA,KAAK,EAAE/B,KANT;AAOE,sBAAA,QAAQ,EAAGwB,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACS,MAAF,CAASF,KAAV;AAP3B;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfF,eAgCF;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAO,sBAAA,OAAO,EAAC,eAAf;AAA+B,sBAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAKE,QAAC,MAAD;AAAQ,sBAAA,iBAAiB,EAAE,KAA3B;AACE,sBAAA,OAAO,EAAEF,OADX;AAEE,sBAAA,OAAO,MAFT;AAGE,sBAAA,QAAQ,EAAGL,CAAD,IAAOf,QAAQ,CAACe,CAAD;AAH3B;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhCE,eAuDE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAO,sBAAA,OAAO,EAAC,eAAf;AAA+B,sBAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,WAAW,EAAC,WAFd;AAGE,sBAAA,SAAS,EAAC,cAHZ;AAIE,sBAAA,EAAE,EAAC,eAJL;AAKE,sBAAA,QAAQ,MALV;AAME,sBAAA,KAAK,EAAEpB,YANT;AAOE,sBAAA,QAAQ,EAAGoB,CAAD,IAAOnB,eAAe,CAACmB,CAAC,CAACS,MAAF,CAASF,KAAV;AAPlC;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvDF,eAqEE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AACE,sBAAA,WAAW,EAAC,WADd;AAEE,sBAAA,SAAS,EAAC,cAFZ;AAGE,sBAAA,IAAI,EAAC,GAHP;AAIE,sBAAA,QAAQ,MAJV;AAKE,sBAAA,KAAK,EAAEzB,WALT;AAME,sBAAA,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACS,MAAF,CAASF,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BArEF,eAgFE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,4CACE;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AACE,sBAAA,SAAS,EAAC,cADZ;AAEE,sBAAA,IAAI,EAAC,MAFP;AAGE,sBAAA,KAAK,EAAE7B,KAHT;AAIE,sBAAA,QAAQ,MAJV;AAKE,sBAAA,QAAQ,EAAGsB,CAAD,IAAOrB,QAAQ,CAACqB,CAAC,CAACS,MAAF,CAASF,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhFF;AAAA,gCAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkID,CAzMD;;GAAMpC,e;UAWad,W,EAEGC,W,EAGEA,W;;;KAhBlBa,e;AA2MN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Toast from \"./../LoadingError/Toast\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  editProduct,\r\n  updateProduct,\r\n} from \"./../../Redux/Actions/ProductActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../../Redux/Constants/ProductConstants\";\r\nimport { toast } from \"react-toastify\";\r\nimport Message from \"../LoadingError/Error\";\r\nimport Loading from \"../LoadingError/Loading\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst ToastObjects = {\r\n  pauseOnFocusLoss: false,\r\n  draggable: false,\r\n  pauseOnHover: false,\r\n  autoClose: 2000,\r\n};\r\n\r\nconst EditProductMain = (props) => {\r\n  const { productId } = props;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [color, setColor] = useState([]);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productEdit = useSelector((state) => state.productEdit);\r\n  const { loading, error, product } = productEdit;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      toast.success(\"Product Updated\", ToastObjects);\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(editProduct(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setDescription(product.description);\r\n        setCountInStock(product.countInStock);\r\n        setImage(product.image);\r\n        setPrice(product.price);\r\n        setColor(product.color);\r\n\r\n      }\r\n    }\r\n  }, [product, dispatch, productId, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    console.log(color)\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        description,\r\n        image,\r\n        countInStock,\r\n        color,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() =>{\r\n\r\nif (color.length === 0){\r\n  return\r\n}console.log('running')\r\n  }, [color])\r\n  const options = [\r\n    { label: \"Red\", value: \"red\" },\r\n    { label: \"Blue\", value: \"blue\" },\r\n    { label: \"Green\", value: \"green\" },\r\n    { label: \"Yellow\", value: \"yellow\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Toast />\r\n      <section className=\"content-main\" style={{ maxWidth: \"1200px\" }}>\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"content-header\">\r\n            <Link to=\"/products\" className=\"btn btn-danger text-white\">\r\n              Go to products\r\n            </Link>\r\n            <h2 className=\"content-title\">Update Product</h2>\r\n            <div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Publish now\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-xl-8 col-lg-8\">\r\n              <div className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                  {errorUpdate && (\r\n                    <Message variant=\"alert-danger\">{errorUpdate}</Message>\r\n                  )}\r\n                  {loadingUpdate && <Loading />}\r\n                  {loading ? (\r\n                    <Loading />\r\n                  ) : error ? (\r\n                    <Message variant=\"alert-danger\">{error}</Message>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"mb-4\">\r\n                        <label htmlFor=\"product_title\" className=\"form-label\">\r\n                          Product title\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Type here\"\r\n                          className=\"form-control\"\r\n                          id=\"product_title\"\r\n                          required\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <label htmlFor=\"product_price\" className=\"form-label\">\r\n                          Price\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          placeholder=\"Type here\"\r\n                          className=\"form-control\"\r\n                          id=\"product_price\"\r\n                          required\r\n                          value={price}\r\n                          onChange={(e) => setPrice(e.target.value)}\r\n                        />\r\n                      </div>\r\n\r\n\r\n                      \r\n                  <div className=\"mb-4\">\r\n                    <label htmlFor=\"product_color\" className=\"form-label\">\r\n                      Color\r\n                    </label>\r\n\r\n                    <Select closeMenuOnSelect={false}\r\n                      options={options}\r\n                      isMulti\r\n                      onChange={(e) => setColor(e)}\r\n                    />\r\n\r\n                    {/* <input\r\n                      type=\"text\"\r\n                      placeholder=\"Type here\"\r\n                      className=\"form-control\"\r\n                      id=\"product_color\"\r\n                      required\r\n                      value={color}\r\n                      onChange={(e) => setColor(e.target.value)}\r\n                    /> */}\r\n                  </div>\r\n\r\n\r\n                      <div className=\"mb-4\">\r\n                        <label htmlFor=\"product_price\" className=\"form-label\">\r\n                          Count In Stock\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          placeholder=\"Type here\"\r\n                          className=\"form-control\"\r\n                          id=\"product_price\"\r\n                          required\r\n                          value={countInStock}\r\n                          onChange={(e) => setCountInStock(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <label className=\"form-label\">Description</label>\r\n                        <textarea\r\n                          placeholder=\"Type here\"\r\n                          className=\"form-control\"\r\n                          rows=\"7\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)}\r\n                        ></textarea>\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <label className=\"form-label\">Images</label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          value={image}\r\n                          required\r\n                          onChange={(e) => setImage(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProductMain;\r\n"]},"metadata":{},"sourceType":"module"}